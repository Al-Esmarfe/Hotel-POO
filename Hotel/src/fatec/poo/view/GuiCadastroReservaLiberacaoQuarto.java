/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fatec.poo.view;

import fatec.poo.control.Conexao;
import fatec.poo.control.DaoHospede;
import fatec.poo.control.DaoQuarto;
import fatec.poo.control.DaoRecepcionista;
import fatec.poo.control.DaoRegistro;
import fatec.poo.model.Hospede;
import fatec.poo.model.Quarto;
import fatec.poo.model.Recepcionista;
import fatec.poo.model.Registro;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;

/**
 *
 * @author mateu
 */
public class GuiCadastroReservaLiberacaoQuarto extends javax.swing.JFrame {

    /**
     * Creates new form GuiCadastroReservaLiberacaoQuarto
     */
    public GuiCadastroReservaLiberacaoQuarto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCodigo = new javax.swing.JLabel();
        lblRegisFunc = new javax.swing.JLabel();
        lblCPFHosp = new javax.swing.JLabel();
        lblNquarto = new javax.swing.JLabel();
        lblDataEntrada = new javax.swing.JLabel();
        lblDataSaida = new javax.swing.JLabel();
        lblValorHospedagem = new javax.swing.JLabel();
        txtRegisFunc = new javax.swing.JTextField();
        txtNquarto = new javax.swing.JTextField();
        ftxtCPFHosp = new javax.swing.JFormattedTextField();
        txtCodigo = new javax.swing.JTextField();
        txtDataEntrada = new javax.swing.JFormattedTextField();
        txtDataSaida = new javax.swing.JFormattedTextField();
        btnSair = new javax.swing.JButton();
        btnLiberar = new javax.swing.JButton();
        btnReservar = new javax.swing.JButton();
        btnProcurarCPFHospede = new javax.swing.JButton();
        btnProcurarRegistroFuncional = new javax.swing.JButton();
        lblValorHospedagemSaida = new javax.swing.JLabel();
        lblResultadoRegistroFuncional = new javax.swing.JLabel();
        lblResultadoCPFHospede = new javax.swing.JLabel();
        lblSituaçao = new javax.swing.JLabel();
        btnProcurarNumQuarto = new javax.swing.JButton();
        lblResultadoNumQuarto = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro Hospedagem");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblCodigo.setText("Código");

        lblRegisFunc.setText("Registro Funcional");

        lblCPFHosp.setText("CPF Hóspede");

        lblNquarto.setText("Nº Quarto");

        lblDataEntrada.setText("Data entrada");

        lblDataSaida.setText("Data saída");

        lblValorHospedagem.setText("Valor Hospedagem");

        txtRegisFunc.setEnabled(false);

        txtNquarto.setEnabled(false);

        try {
            ftxtCPFHosp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtCPFHosp.setEnabled(false);

        try {
            txtDataEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataEntrada.setEnabled(false);

        try {
            txtDataSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataSaida.setEnabled(false);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/exit.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnLiberar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/rem.png"))); // NOI18N
        btnLiberar.setText("Liberar");
        btnLiberar.setEnabled(false);
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        btnReservar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/add.png"))); // NOI18N
        btnReservar.setText("Reservar");
        btnReservar.setEnabled(false);
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        btnProcurarCPFHospede.setText(". . .");
        btnProcurarCPFHospede.setEnabled(false);
        btnProcurarCPFHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarCPFHospedeActionPerformed(evt);
            }
        });

        btnProcurarRegistroFuncional.setText(". . .");
        btnProcurarRegistroFuncional.setEnabled(false);
        btnProcurarRegistroFuncional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarRegistroFuncionalActionPerformed(evt);
            }
        });

        lblValorHospedagemSaida.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblResultadoRegistroFuncional.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblResultadoCPFHospede.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblSituaçao.setText("Situação");

        btnProcurarNumQuarto.setText(". . .");
        btnProcurarNumQuarto.setEnabled(false);
        btnProcurarNumQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarNumQuartoActionPerformed(evt);
            }
        });

        lblResultadoNumQuarto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/pesq.png"))); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblValorHospedagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblValorHospedagemSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRegisFunc)
                            .addComponent(lblCodigo)
                            .addComponent(lblNquarto)
                            .addComponent(lblCPFHosp)
                            .addComponent(lblDataEntrada)
                            .addComponent(lblDataSaida))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRegisFunc)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(txtNquarto, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataEntrada)
                            .addComponent(ftxtCPFHosp, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtDataSaida))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnProcurarCPFHospede)
                                .addGap(18, 18, 18)
                                .addComponent(lblResultadoCPFHospede, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnProcurarRegistroFuncional)
                                .addGap(18, 18, 18)
                                .addComponent(lblResultadoRegistroFuncional, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSituaçao)
                                .addGap(18, 18, 18)
                                .addComponent(btnProcurarNumQuarto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblResultadoNumQuarto, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)))))
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConsultar)
                .addGap(18, 18, 18)
                .addComponent(btnReservar)
                .addGap(18, 18, 18)
                .addComponent(btnLiberar)
                .addGap(18, 18, 18)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisFunc)
                    .addComponent(txtRegisFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcurarRegistroFuncional)
                    .addComponent(lblResultadoRegistroFuncional, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPFHosp)
                    .addComponent(ftxtCPFHosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcurarCPFHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblResultadoCPFHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNquarto)
                    .addComponent(txtNquarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSituaçao)
                    .addComponent(btnProcurarNumQuarto)
                    .addComponent(lblResultadoNumQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataEntrada)
                    .addComponent(txtDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataSaida)
                    .addComponent(txtDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblValorHospedagemSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValorHospedagem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(btnLiberar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReservar)
                    .addComponent(btnConsultar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    conexao = new Conexao("BD2211023","BD2211023");//usuario e senha
    conexao.setDriver("oracle.jdbc.driver.OracleDriver");
    conexao.setConnectionString("jdbc:oracle:thin:@192.168.1.6:1521:xe");
    daoRegistro = new DaoRegistro(conexao.conectar());
    }//GEN-LAST:event_formWindowOpened

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        try {
            registro = null;
            registro = daoRegistro.consultar(Integer.parseInt(txtCodigo.getText()));       
            if (registro == null){//não encontrou o objeto na BD
                 txtCodigo.setEnabled(false);
                 txtRegisFunc.setEnabled(true);
                 txtRegisFunc.requestFocus();
                 
                 btnConsultar.setEnabled(false);
                 btnProcurarRegistroFuncional.setEnabled(true);
             }
            else{ //encontrou o objeto na BD
               txtRegisFunc.setText(String.valueOf(registro.getRecepcionista().getRegFunc()));
               ftxtCPFHosp.setText(registro.getHospede().getCpf());
               txtNquarto.setText(String.valueOf(registro.getQuarto().getNumero()));
               
               DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
               String dataFormEntrada = registro.getDataEntrada().format(formatter);
               txtDataEntrada.setText(dataFormEntrada);
               
               

               txtCodigo.setEnabled(false);
               
               if(registro.getDataSaida() == null){
                   txtDataSaida.setEnabled(true);
                   txtDataSaida.requestFocus();
                   btnLiberar.setEnabled(true);
               } else {
                   String dataFormSaida = registro.getDataSaida().format(formatter);
                   txtDataSaida.setText(dataFormSaida);
                   lblValorHospedagemSaida.setText(String.valueOf(registro.getValorHospedagem()));
               }

               btnConsultar.setEnabled(false);
            }    
       } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato errado, o código deve ser inteiro positivo.", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnProcurarRegistroFuncionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarRegistroFuncionalActionPerformed
    daoRecepcionista = new DaoRecepcionista(conexao.conectar());
    try {
        String regisFuncText = txtRegisFunc.getText();
        if (regisFuncText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo de registro funcional está vazio.", "Erro", JOptionPane.ERROR_MESSAGE);
            txtRegisFunc.requestFocus();
        } else {
            int regisFunc = Integer.parseInt(regisFuncText);
            recepcionista = daoRecepcionista.consultar(regisFunc);

            if (recepcionista == null) {
                JOptionPane.showMessageDialog(this, "Recepcionista não cadastrado.", "Erro", JOptionPane.ERROR_MESSAGE);
                txtRegisFunc.requestFocus();
            } else {
                lblResultadoRegistroFuncional.setText(recepcionista.getNome());
                txtRegisFunc.setEnabled(false);
                btnProcurarRegistroFuncional.setEnabled(false);
                ftxtCPFHosp.setEnabled(true);
                ftxtCPFHosp.requestFocus();
                btnProcurarCPFHospede.setEnabled(true);
            }
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Formato errado, o código deve ser um número inteiro.", "Erro", JOptionPane.ERROR_MESSAGE);
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnProcurarRegistroFuncionalActionPerformed

    private void btnProcurarCPFHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarCPFHospedeActionPerformed
    daoHospede = new DaoHospede(conexao.conectar());
    try {
        if (ftxtCPFHosp.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo de CPF está vazio.", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            hospede = daoHospede.consultar(ftxtCPFHosp.getText());

            if (hospede == null) {
                JOptionPane.showMessageDialog(this, "Hóspede não cadastrado.", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                lblResultadoCPFHospede.setText(hospede.getNome());
                ftxtCPFHosp.setEnabled(false);
                btnProcurarCPFHospede.setEnabled(false);
                txtNquarto.setEnabled(true);
                btnProcurarNumQuarto.setEnabled(true);
                txtNquarto.requestFocus();
            }
        }
        ftxtCPFHosp.requestFocus();
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnProcurarCPFHospedeActionPerformed

    private void btnProcurarNumQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarNumQuartoActionPerformed
    daoQuarto = new DaoQuarto(conexao.conectar());
    try {
        if (txtNquarto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Numero do Quarto está vazio.", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            quarto = daoQuarto.consultar(Integer.parseInt(txtNquarto.getText()));
            
            if (quarto == null) {
                JOptionPane.showMessageDialog(this, "Quarto não cadastrado.", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                if(quarto.getSituacao() == false) {
                    lblResultadoNumQuarto.setText("O quarto está livre");
                    txtNquarto.setEnabled(false);
                    btnProcurarNumQuarto.setEnabled(false);
                    txtDataEntrada.setEnabled(true);
                    txtDataEntrada.requestFocus();
                    
                    btnReservar.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Quarto Ocupado.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        txtNquarto.requestFocus();
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnProcurarNumQuartoActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
    try {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate data = LocalDate.parse(txtDataEntrada.getText(), formatter);
        int codigo = Integer.parseInt(txtCodigo.getText());
        
        registro = new Registro(codigo, data, recepcionista);
        registro.reservarQuarto(hospede, quarto);
        daoQuarto.alterar(quarto);
        daoRegistro.reservar(registro);
        
        txtCodigo.setText("");
        txtRegisFunc.setText("");
        lblResultadoRegistroFuncional.setText("");
        ftxtCPFHosp.setText("");
        lblResultadoCPFHospede.setText("");
        txtNquarto.setText("");
        lblResultadoNumQuarto.setText("");
        txtDataEntrada.setText("");
        
        txtCodigo.setEnabled(true);
        txtRegisFunc.setEnabled(false);
        lblResultadoRegistroFuncional.setEnabled(false);
        ftxtCPFHosp.setEnabled(false);
        lblResultadoCPFHospede.setEnabled(false);
        txtNquarto.setEnabled(false);
        lblResultadoNumQuarto.setEnabled(false);
        txtDataEntrada.setEnabled(false);
        
        btnReservar.setEnabled(false);
        btnConsultar.setEnabled(true);
    } catch (DateTimeParseException e) {
        JOptionPane.showMessageDialog(this, "Data Inválida", "Erro", JOptionPane.ERROR_MESSAGE);
        txtDataEntrada.requestFocus();
    }
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
    try {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate data = LocalDate.parse(txtDataSaida.getText(), formatter);
        registro.setDataSaida(data);
        
        System.out.println("Total Faturado antes do liberar quarto" + registro.getQuarto().getTotalFaturado());
        
        Double valorHospedagem = registro.liberarQuarto();
        System.out.println("Situação Quarto antes " + registro.getQuarto().getSituacao());
        registro.setValorHospedagem(valorHospedagem);
        lblValorHospedagemSaida.setText(String.valueOf(valorHospedagem));
        
        
        System.out.println("Total Faturado Quarto " + registro.getQuarto().getTotalFaturado());
        new DaoQuarto(conexao.conectar()).alterar(registro.getQuarto());
        txtDataSaida.setEnabled(false);
        btnLiberar.setEnabled(false);
        
        daoRegistro.liberar(registro);
    } catch (DateTimeParseException e) {
        JOptionPane.showMessageDialog(this, "Data Inválida", "Erro", JOptionPane.ERROR_MESSAGE);
        txtDataEntrada.requestFocus();
    }
    }//GEN-LAST:event_btnLiberarActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JButton btnProcurarCPFHospede;
    private javax.swing.JButton btnProcurarNumQuarto;
    private javax.swing.JButton btnProcurarRegistroFuncional;
    private javax.swing.JButton btnReservar;
    private javax.swing.JButton btnSair;
    private javax.swing.JFormattedTextField ftxtCPFHosp;
    private javax.swing.JLabel lblCPFHosp;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDataEntrada;
    private javax.swing.JLabel lblDataSaida;
    private javax.swing.JLabel lblNquarto;
    private javax.swing.JLabel lblRegisFunc;
    private javax.swing.JLabel lblResultadoCPFHospede;
    private javax.swing.JLabel lblResultadoNumQuarto;
    private javax.swing.JLabel lblResultadoRegistroFuncional;
    private javax.swing.JLabel lblSituaçao;
    private javax.swing.JLabel lblValorHospedagem;
    private javax.swing.JLabel lblValorHospedagemSaida;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtDataEntrada;
    private javax.swing.JFormattedTextField txtDataSaida;
    private javax.swing.JTextField txtNquarto;
    private javax.swing.JTextField txtRegisFunc;
    // End of variables declaration//GEN-END:variables
    private DaoRegistro daoRegistro=null;
    private Registro registro=null;
    private Conexao conexao=null;
    
    private DaoRecepcionista daoRecepcionista=null;
    private Recepcionista recepcionista=null;
    
    private DaoHospede daoHospede=null;
    private Hospede hospede=null;
    
    private DaoQuarto daoQuarto=null;
    private Quarto quarto=null;
}
